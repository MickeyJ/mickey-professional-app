name: CD - Deploy to Cloud Run

on:
  workflow_run:
    workflows: ["CI - Build Test"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      APP_NAME: mickey-app
      REPOSITORY: mickey-app-repo
      TF_STATE_BUCKET: ${{ secrets.GCP_PROJECT_ID }}-terraform-state
      TF_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ./terraform

      - name: Check Terraform State Bucket
        id: check_bucket
        run: |
          if gsutil ls -p ${{ env.PROJECT_ID }} gs://${{ env.TF_STATE_BUCKET }} 2>/dev/null; then
            echo "bucket_exists=true" >> $GITHUB_OUTPUT
          else
            echo "bucket_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:${{ github.sha }} .

      - name: Push
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:${{ github.sha }}

      - name: Update Cloud Run service
        working-directory: ./terraform/infrastructure
        run: |
          terraform apply -auto-approve \
            -var="project_id=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="app_name=${{ env.APP_NAME }}" \
            -var="repository_name=${{ env.REPOSITORY }}" \
            -var="container_image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.APP_NAME }}:${{ github.sha }}"

      - name: Output Cloud Run URL
        working-directory: ./terraform/infrastructure
        run: |
          echo "Cloud Run URL: $(terraform output -raw cloud_run_url)"
          echo "Custom Domain: $(terraform output -raw custom_domain_url || echo 'Not configured')"
